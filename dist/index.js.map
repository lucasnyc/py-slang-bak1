{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["//\n// // // Forbidden identifier\n// // text =\n// // `\n// // async def y():\n// //     pass\n// // `;\n// //\n// // Non four indent\n// // let text =\n// // `\n// // def x():\n// //    pass\n// // `;\n//\n// // // Unrecognised token\n// // text = `\n// //             ?\n// // `;\n//\n// // Unterminated string\n// // text = `\\\n// //\n// // \"abc\" \"abcdef`;\n//\n// // // Forbidden operator\n// // text =`\n// // a @= b\n// // `\n//\n// // // Expected token\n// // text = `\n// // def a(c, d)\n// //     pass\n// // `\n//\n// // // Expected else block\n// // text = `\n// // if y:\n// //     pass\n// //\n// // `;\n//\n// // // Expected colon after lambda:\n// // text = `\n// // x = lambda a\n// // `;\n//\n// // // Expected import\n// // text = `\n// // from x\n// // `;\n//\n// // // Bad identifier\n// // text = `\n// // def a(1, 2):\n// //     pass\n// // `;\n//\n// // // Missing closing parentheses:\n// // text = `\n// // def a(a, b:\n// //     pass\n// // `;\n//\n// // // @TODO Invalid assign target\n// // text = `\n// //\n// // 1 = 2 def a(b, c):\n// //     pass\n// // `;\n//\n// // Variable declaration hoisting\n// // text = `\n// // x = 1\n// // def a():\n// //     if True:\n// //         x = 1\n// //     else:\n// //         y = 2\n// //     def b():\n// //         x = 1\n// // `\n// // // Undeclared variable\n// // text = `\n// // x = display(a)\n// // `\n// // Misspelled name\n// // text = `\n// // displar(1)\n// // `\n//\n// // // Mispelled name 2\n//\n// // text = `\n// // def y(param):\n// //     def z():\n// //         var = display(barams)\n// // `\n//\n// // // Name reassignment\n//\n// // text = `\n// // x = 1\n// // while True:\n// //     pass\n// // x = lambda a:a\n// // `;\n//\n// // text = `\n// // # !x\n// // not x\n// // `\n//\n// // text = `\n// // (lambda a:a)(1)\n// //\n// // `;\n//\n// // text = `\n// // (x)(1)\n// // `;\n//\n// // text = `\n// // def a(b,c):\n// //     pass\n// // `;\n//\n/* Use as a command line script */\n/* npm run start:dev -- test.py */\n\nimport { Tokenizer } from \"./tokenizer\";\nimport { Parser } from \"./parser\";\nimport { Translator } from \"./translator\";\nimport { Program } from \"estree\";\nimport { Resolver } from \"./resolver\";\nimport { Context } from './cse-machine/context';\nexport * from './errors';\nimport { Finished, RecursivePartial, Result } from \"./types\";\nimport { runCSEMachine } from \"./runner/pyRunner\";\nimport { initialise } from \"./conductor/runner/util/initialise\";\nimport { PyEvaluator } from \"./conductor/runner/types/PyEvaluator\";\nexport * from './errors';\n\nexport function parsePythonToEstreeAst(code: string,\n    variant: number = 1,\n    doValidate: boolean = false): Program {\n    const script = code + '\\n'\n    const tokenizer = new Tokenizer(script)\n    const tokens = tokenizer.scanEverything()\n    const pyParser = new Parser(script, tokens)\n    const ast = pyParser.parse()\n    if (doValidate) {\n        new Resolver(script, ast).resolve(ast);\n    }\n    const translator = new Translator(script)\n    return translator.resolve(ast) as unknown as Program\n}\n\n// import {ParserErrors, ResolverErrors, TokenizerErrors} from \"./errors\";\n// import fs from \"fs\";\n// const BaseParserError = ParserErrors.BaseParserError;\n// const BaseTokenizerError = TokenizerErrors.BaseTokenizerError;\n// const BaseResolverError = ResolverErrors.BaseResolverError;\n// if (process.argv.length > 2) {\n//     try {\n//         let text = fs.readFileSync(process.argv[2], 'utf8');\n//         // Add a new line just in case\n//         text += '\\n';\n//         const tokenizer = new Tokenizer(text);\n//         const tokens = tokenizer.scanEverything();\n//         tokenizer.printTokens();\n//         const parser = new Parser(text, tokens);\n//         const ast = parser.parse();\n//         // const resolver = new Resolver(text, ast);\n//         // resolver.resolve(ast);\n//         console.dir(ast, { depth: null });\n//         const translator = new Translator(text);\n//         const estreeAst = translator.resolve(ast);\n//         console.dir(estreeAst, { depth: null });\n//     } catch (e) {\n//         if (e instanceof BaseTokenizerError\n//             || e instanceof BaseParserError\n//             || e instanceof BaseResolverError) {\n//             console.error(e.message);\n//         } else {\n//             throw e;\n//         }\n//     }\n// }\n\nexport interface IOptions {\n    isPrelude: boolean,\n    envSteps: number,\n    stepLimit: number\n};\n\nexport async function runInContext(\n    code: string,\n    context: Context,\n    options: RecursivePartial<IOptions> = {}\n): Promise<Result> {\n    const estreeAst = parsePythonToEstreeAst(code, 1, true);\n    const result = runCSEMachine(code, estreeAst, context, options);\n    return result;\n}\n\nconst {runnerPlugin, conduit} = initialise(PyEvaluator);\n"],"names":[],"mappingseA,OAaC,CAAA,sBAAA,GAAA,sBAAA;IAwCD,OAQC,CAAA,YAAA,GAAA,YAAA;;IA1ED,MAAwC,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;IACxC,MAAkC,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;IAClC,MAA0C,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;IAE1C,MAAsC,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;IAEtC,OAAyB,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,OAAA,CAAA;IAEzB,MAAkD,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;IAClD,MAAgE,YAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;IAChE,MAAmE,aAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;IACnE,OAAyB,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,OAAA,CAAA;IAEzB,SAAgB,sBAAsB,CAAC,IAAY,EAC/C,UAAkB,CAAC,EACnB,aAAsB,KAAK,EAAA;IAC3B,IAAA,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI;IAC1B,IAAA,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,MAAM,CAAC;IACvC,IAAA,MAAM,MAAM,GAAG,SAAS,CAAC,cAAc,EAAE;QACzC,MAAM,QAAQ,GAAG,IAAI,QAAA,CAAA,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC;IAC3C,IAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE;QAC5B,IAAI,UAAU,EAAE;YACZ,IAAI,UAAA,CAAA,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;;IAE1C,IAAA,MAAM,UAAU,GAAG,IAAI,uBAAU,CAAC,MAAM,CAAC;IACzC,IAAA,OAAO,UAAU,CAAC,OAAO,CAAC,GAAG,CAAuB;IACxD;IAwCA,SAAsB,YAAY,CAAA,MAAA,EAAA,SAAA,EAAA;IAC9B,IAAA,OAAA,OAAA,CAAA,SAAA,CAAA,IAAA,EAAA,SAAA,EAAA,MAAA,EAAA,WAAA,IAAY,EACZ,OAAgB,EAChB,OAAA,GAAsC,EAAE,EAAA;YAExC,MAAM,SAAS,GAAG,sBAAsB,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;IACvD,QAAA,MAAM,MAAM,GAAG,IAAA,UAAA,CAAA,aAAa,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC;IAC/D,QAAA,OAAO,MAAM;SAChB,CAAA;IAAA;IAED,MAAM,EAAC,YAAY,EAAE,OAAO,EAAC,GAAG,IAAA,YAAU,CAAA,UAAA,EAAC,aAAW,CAAA,WAAA,CAAC;;;;;;"}